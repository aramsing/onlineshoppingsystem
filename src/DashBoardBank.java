
import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author briao
 */
public class DashBoardBank extends javax.swing.JFrame {
    //this is customer dash board, supplier dashboard is in ___filename.java_____
    //set labels to default vals
        double subtotal = 0;
        double tax = 0;
        double total = 0;
        UserLanding test = new UserLanding();
    /**
     * Creates new form DashBoard
     */
    public DashBoardBank() {
        initComponents();
        //set default values for labels using local variables
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePurchaseViewer = new javax.swing.JTable();
        jButtonVIEWPurchases = new javax.swing.JButton();
        jButtonLOGOUT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTablePurchaseViewer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserID", "Item ID", "Price Payed", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePurchaseViewer.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTablePurchaseViewer);

        jButtonVIEWPurchases.setText("View Purchases");
        jButtonVIEWPurchases.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVIEWPurchasesActionPerformed(evt);
            }
        });

        jButtonLOGOUT.setText("Log Out");
        jButtonLOGOUT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLOGOUTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonVIEWPurchases)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonLOGOUT))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 866, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVIEWPurchases)
                    .addComponent(jButtonLOGOUT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ////SELECT ITEMS
    public void selectItems(){
        //String filePath = 
    }
    private void jButtonVIEWPurchasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVIEWPurchasesActionPerformed
        //this method is connected to the 'view catalog' button; this button is just 
        //place-holder right now until i decide whether i will change up the scene when
        //coming from the login <basically when i decide what the landing page will look like>
        //  It is also suitable on it's own as far as the use-case if concerned
        //reference vid(s) : 
        //  https://www.youtube.com/watch?v=LP7_DlIe670&list=PLFDH5bKmoNqxtOTzA4tjo-Exck6T2v7cG&index=25
        //  https://www.youtube.com/watch?v=L2xczUN9aI0&list=PLFDH5bKmoNqxtOTzA4tjo-Exck6T2v7cG&index=22
 
        String filePath = "OrderList.txt";
        File file = new File(filePath);
        
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
//            FileWriter fw = new FileWriter(file,true);
//            BufferedWriter bw = new BufferedWriter(fw);
            
            DefaultTableModel model = (DefaultTableModel)jTablePurchaseViewer.getModel();
            
            Object[] lines = br.lines().toArray();      //creates an Object Array of row strings
            for(int i = 1; i < lines.length; i++){          //begins at one because first line is column names
                String[] row = lines[i].toString().split(",");
               // if(jTableCatalogView.getValueAt().equals((Object)row[4])){
//                System.out.println(row[4]);
//                if (row[4].equalsIgnoreCase("0")){
//                    System.out.println("here");
//                    
//                }
//            
//                
                model.addRow(row);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IOException ex){
//            Logger.getLogger(DashBoard.class.getName()).log(Level.SEVERE, null, ex);
//        }
        }
    }//GEN-LAST:event_jButtonVIEWPurchasesActionPerformed

    
    public int bankAuthorize(String username, String ccnum){
        
        return 0;
    }
    private void jButtonLOGOUTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLOGOUTActionPerformed
        dispose();
        //UserLanding test = new UserLanding();
        test.setVisible(true);
    }//GEN-LAST:event_jButtonLOGOUTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLOGOUT;
    private javax.swing.JButton jButtonVIEWPurchases;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePurchaseViewer;
    // End of variables declaration//GEN-END:variables
}
